name: API

on:
  push:
    branches:
      - main
    paths:
      - "apps/api/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
  pull_request:
    branches:
      - main
    paths:
      - "apps/api/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"

jobs:
  quality:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Get pnpm version from package.json
        id: pnpm-version
        run: echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | cut -d'@' -f2)" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}
          run_install: false

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Verify versions
        run: |
          node -v
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prisma Generate
        run: pnpm --filter @yuna/api prisma:generate

      - name: Lint API
        run: pnpm --filter @yuna/api lint

      - name: Test API
        run: pnpm --filter @yuna/api test

      - name: Build API
        run: pnpm --filter @yuna/api build
